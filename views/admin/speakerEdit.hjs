                <link href="/admin-assets/plugins/summernote/summernote.css" rel="stylesheet">
                <style>
                    .button-margin {
                        margin-right: 10px;
                    }

                    .button-hide {
                        display: none;
                    }

                    #upImage {
                        display: none;
                    }

                </style>
                <!--start main content-->
                <section id="main-content">
                    <div class="space-30"></div>
                    <div class="container">

                        <div class="row">
                            <div class="col-md-6">
                                <div class="panel">
                                    <header class="panel-heading">
                                        <h2 id="hName" class="panel-title" data-id="{{speakerId}}"></h2>
                                    </header>
                                    <div class="panel-body">

                                        <form id="frmMain" method="get" role="form" class="form-horizontal">

                                            <div class="form-group"><label class="col-lg-2 control-label">ID</label>
                                                <div class="col-lg-2"><input id="txtId" type="text" placeholder="ID" class="form-control" disabled>
                                                </div>
                                            </div>
                                            
                                            <div class="form-group"><label class="col-lg-2 control-label">Full Name</label>
                                                <div class="col-lg-8"><input id="txtFullName" type="text" placeholder="Full Name" class="form-control">
                                                </div>
                                            </div>

                                            <div class="form-group"><label class="col-lg-2 control-label">Company</label>
                                                <div class="col-lg-8"><input id="txtCompany" type="text" placeholder="Company" class="form-control">
                                                </div>
                                            </div>

                                            <div class="form-group"><label class="control-label col-lg-2">Twitter</label>
                                                <div class="col-lg-8">
                                                    <div class="input-group">
                                                        <span class="input-group-addon">@</span>
                                                        <input type="text" pattern="^[_A-z0-9]{1,}$" maxlength="15" class="form-control" id="txtTwitter" placeholder="Twitter" required>
                                                    </div>
                                                </div>
                                            </div>

                                            <div id="divSpeaker" class="form-group"><label class="col-lg-2 control-label">Speaker photo</label>
                                                <div class="col-lg-10"><img id="imgPhoto" src="" style="margin-bottom: 10px; width:250px"></img></div>

                                                <div class="col-lg-offset-2 col-lg-10"><button id="btnUpload" class="btn btn-warning" type="button">Change photo</button> </div>

                                                <!--The default upload buttons are hidden due to ugliness, replaced with button above-->
                                                <div class="col-lg-8"><input id="upImage" type="file" name="upload" class="form-control"></div>
                                                
                                            </div>

                                            <div class="form-group"><label class="col-lg-2 control-label">Biography</label>
                                                <div class="col-lg-8"><textarea id="txtBio" placeholder="Biography" class="form-control"></textarea>
                                                </div>
                                            </div>

                                            <div class="text-center">
                                                <button id="btnUpdate" type="button" class="btn btn-info rounded ">Update</button>
                                            </div>

                                        </form>

                                    </div>

                                     <div id="alDiv" class="alert alert-dismissable col-lg-offset-3 col-lg-6 text-center" hidden>
                                        <button aria-hidden="true" data-dismiss="alert" class="close" type="button">Ã—</button>
                                        <span id="alMessage">   </span>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div><!--end container-->

                    <!--footer start-->
                    <div class="footer">
                        <div class="row">
                            <div class="col-sm-12">
                                <span>&copy; Copyright 2017. chirpee.io</span>
                            </div>
                        </div>
                    </div>
                    <!--footer end-->
                </section><!--end main content-->

                {{> jscript}}

                <script src="/admin-assets/plugins/summernote/summernote.min.js"></script>

<script>
    $(document).ready(function(){

        //Retrieve speaker id from header data-id tag
        var speakerId = $("#hName").data("id") ;

        //Declare all input fields as variables, for easier use later
        var $frmMain = $("#frmMain");
        var $hName = $("#hName");
        var $txtId = $("#txtId");
        var $txtFullName = $("#txtFullName");
        var $txtCompany = $("#txtCompany");
        var $txtBio = $("#txtBio");
        var $upImage = $("#upImage");
        var $imgPhoto = $("#imgPhoto");
        var $txtTwitter = $("#txtTwitter");

        //Declare alert panel objects as variables, for easier use later
        //The alert panel is used to show success or failure on record updates or speaker retrieval
        var $alDiv = $("#alDiv");
        var $alMessage = $("#alMessage");

        $("#liMenuSpeaker").addClass("active");
        $("#liSubMenuSpeakerList").addClass("active");

        //Populate fields
        $.ajax({
            type: 'GET',
            url: '/api/speaker/' + speakerId,

            success: function(speaker) {

                $txtId.val(speaker.id);
                $txtFullName.val(speaker.fullName);
                $txtCompany.val(speaker.companyName);
                $txtBio.summernote("code", speaker.bio);
                $txtTwitter.val(speaker.twitter);

                if (speaker.imageUrl) {
                    $imgPhoto.prop("src", "../../images/speakers/" + speaker.imageUrl);
                    $imgPhoto.prop("data-src", "../../images/speakers/" + speaker.imageUrl);
                } else {
                    $imgPhoto.prop("src", "../../images/speakers/" + "placeholder-profile.jpg");
                    $imgPhoto.prop("data-src", "../../images/speakers/" + "placeholder-profile.jpg");
                }
                
                $hName.text(speaker.fullName);

            },
            error: function() {
                $alDiv.addClass("alert-danger");
                $alMessage.html("<strong>Error - </strong> Error retrieving speaker information.");
                $alDiv.show();

                //On error, disable all form fields
                $frmMain.find('input, textarea, button, select').attr('disabled','disabled');

            }
        });

        $('#txtBio').summernote({
            height: "450px",
            airMode: false,
            placeholder: "Biography. * This is a rich text editor, highlight text for formatting options. *",
            toolbar: [
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['font', ['strikethrough', 'superscript', 'subscript']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
            ]
        });

        $("#btnUpload").on("click", function() {
            $("#upImage").click();
        });

        //This code runs when change of image file is detected
        $('#upImage').on('change', function(){
            var files = $(this).get(0).files;

            if (files.length > 0) {
                var file = files[0];

                //If file is not jpeg, then exit, displaying an error
                if (file.type !== "image/jpeg") {
                    displayAlert("Error","Image must be a JPEG file.");
                    return;
                }

                //Check if the file matches the dimensions [256x256], do not allow the change if it doesn't match the dimensions
                var imageCheck = new Image();
                imageCheck.src = URL.createObjectURL(file);

                imageCheck.onload = function() {
                    if (this.width === 256 && this.height === 256) {
                        //Update the existing image  element
                        var img = document.getElementById("imgPhoto")
                        img.classList.add("obj");
                        img.file = file;

                        var reader = new FileReader();
                        reader.onload = (function(aImg) { return function(e) { aImg.src = e.target.result; }; })(img);
                        reader.readAsDataURL(file);
                    
                    } else {
                        displayAlert("Error","Image must be 256px x 256px.");
                        return;
                    }
                };

            }

        });

        //Record update on Update button click. Updates the record and shows success/error alert panel
        $('#btnUpdate').on('click', function() {
            var currentTime = new Date();
            var filename;
            var imageUrl = "";
            var blUpload = false;

            if (!$imgPhoto.prop("src").includes("data:")) {
                imageUrl = $imgPhoto.prop("src").split("/").pop();
                blUpload = false;
                
            } else {

                if (!$imgPhoto.prop("data-src").includes("placeholder") && $imgPhoto.prop("data-src") !== "") {
                    imageUrl = $imgPhoto.prop("data-src").split("/").pop();;
                    blUpload = true;
                } else {
                    fileName = $txtFullName.val().replace(/ /g,'');
                    fileName = fileName.toLowerCase() + "_";
                    fileName = fileName + currentTime.getFullYear() + ("0" + (currentTime.getMonth() + 1)).slice(-2) + 
                        ("0" + (currentTime.getDate())).slice(-2) + ("0" + (currentTime.getHours())).slice(-2) + 
                        ("0" + (currentTime.getMinutes())).slice(-2) + ("0" + (currentTime.getSeconds())).slice(-2) ;
                    fileName = fileName + ".jpg";

                    imageUrl = fileName;
                    blUpload = true;
                }

                // fileName = $imgPhoto.prop("data-src").split("/").pop();
            }

            var speaker = {
                companyName: $txtCompany.val(),
                fullName: $txtFullName.val(),
                bio: $txtBio.summernote("code"),
                imageUrl: imageUrl,
                twitter: $txtTwitter.val()
            }

            $.ajax({
                type: 'PUT',
                url: '/api/speaker/' + speakerId,
                data: speaker,

                success: function(delegate) {
                    if (blUpload) { uploadFile(imageUrl); };

                    displayAlert("Success", "Record successfully updated.", 6000);

                },

                error: function(xhr, textStatus, errorThrown) {
                    var error = jQuery.parseJSON(xhr.responseText);

                    $alDiv.addClass("alert-danger");
                    $alMessage.html("<strong>Error - </strong> Could not update record. <br><br>" + error);
                    $alDiv.show();
                    // $alDiv.fadeOut ( 6000 );
                }
                
            })
        });

    });

    function displayAlert(messageType, message, fadeTime) {

        fadeTime = fadeTime || 10000;

        if (messageType.toLowerCase() === "success") {
            divClass = "alert-success";
            divClassRemove = "alert-danger"
        } else {
            divClass = "alert-danger";
            divClassRemove = "alert-success"
        }

        $("#alDiv").removeClass(divClassRemove);
        $("#alDiv").addClass(divClass);
        $("#alMessage").html("<strong>" + messageType + " - </strong>" + message);
        $("#alDiv").show();
        $("#alDiv").fadeOut(fadeTime);
    }

    function uploadFile(fileName) {
            var files = $("#upImage").get(0).files;

            if (files.length > 0){
                // One or more files selected, process the file upload

                var formData = new FormData();
                var file = files[0]
                
                // formData.append('upload', file, file.name)
                formData.append('upload', file, fileName)

                $.ajax({
                    url: '/api/upload',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(data){
                        console.log('upload successful!\n' + data);
                    },
                    xhr: function() {
                        // create an XMLHttpRequest
                        var xhr = new XMLHttpRequest();

                        // listen to the 'progress' event
                        xhr.upload.addEventListener('progress', function(evt) {

                            if (evt.lengthComputable) {
                                // // calculate the percentage of upload completed
                                // var percentComplete = evt.loaded / evt.total;
                                // percentComplete = parseInt(percentComplete * 100);

                                // // update the Bootstrap progress bar with the new percentage
                                // $('.progress-bar').text(percentComplete + '%');
                                // $('.progress-bar').width(percentComplete + '%');

                                // // once the upload reaches 100%, set the progress bar text to done
                                // if (percentComplete === 100) {
                                // $('.progress-bar').html('Done');
                                // }

                            }

                        }, false);

                        return xhr;
                    }
                });

            } 
        }

</script>